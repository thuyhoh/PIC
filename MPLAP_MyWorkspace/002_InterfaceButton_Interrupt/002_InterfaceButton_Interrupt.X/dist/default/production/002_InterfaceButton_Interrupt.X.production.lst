

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 12 21:46:11 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,space=0,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     0059                     _INTF           set	89
   176     0038                     _RC0            set	56
   177     005C                     _INTE           set	92
   178     005F                     _GIE            set	95
   179     0087                     _TRISC          set	135
   180     0086                     _TRISB          set	134
   181     040E                     _INTEDG         set	1038
   182                           
   183                           	psect	cinit
   184     000F                     start_initialization:	
   185                           ; #config settings
   186                           
   187     000F                     __initialization:
   188                           
   189                           ; Clear objects allocated to COMMON
   190     000F  01F5               	clrf	__pbssCOMMON& (0+127)
   191     0010                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     0010                     __end_of__initialization:
   195     0010  0183               	clrf	3
   196     0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	bssCOMMON
   199     0075                     __pbssCOMMON:
   200     0075                     _bnt_state:
   201     0075                     	ds	1
   202                           
   203                           	psect	cstackCOMMON
   204     0070                     __pcstackCOMMON:
   205     0070                     ?_main:
   206     0070                     ?_ExINT:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ??_ExINT:	
   210                           ; 1 bytes @ 0x0
   211                           
   212                           
   213                           ; 1 bytes @ 0x0
   214     0070                     	ds	2
   215     0072                     ??_main:
   216                           
   217                           ; 1 bytes @ 0x2
   218     0072                     	ds	3
   219                           
   220                           	psect	maintext
   221     0014                     __pmaintext:	
   222 ;;
   223 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   224 ;;
   225 ;; *************** function _main *****************
   226 ;; Defined at:
   227 ;;		line 28 in file "main.c"
   228 ;; Parameters:    Size  Location     Type
   229 ;;		None
   230 ;; Auto vars:     Size  Location     Type
   231 ;;		None
   232 ;; Return value:  Size  Location     Type
   233 ;;                  1    wreg      void 
   234 ;; Registers used:
   235 ;;		wreg, status,2, status,0
   236 ;; Tracked objects:
   237 ;;		On entry : B00/0
   238 ;;		On exit  : 0/0
   239 ;;		Unchanged: 0/0
   240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   241 ;;      Params:         0       0       0       0       0
   242 ;;      Locals:         0       0       0       0       0
   243 ;;      Temps:          3       0       0       0       0
   244 ;;      Totals:         3       0       0       0       0
   245 ;;Total ram usage:        3 bytes
   246 ;; Hardware stack levels required when called: 1
   247 ;; This function calls:
   248 ;;		Nothing
   249 ;; This function is called by:
   250 ;;		Startup code after reset
   251 ;; This function uses a non-reentrant model
   252 ;;
   253                           
   254     0014                     _main:	
   255                           ;psect for function _main
   256                           
   257     0014                     l578:	
   258                           ;incstack = 0
   259                           ; Regs used in _main: [wreg+status,2+status,0]
   260                           
   261                           
   262                           ;main.c: 30:     TRISB = 1;
   263     0014  3001               	movlw	1
   264     0015  1683               	bsf	3,5	;RP0=1, select bank1
   265     0016  1303               	bcf	3,6	;RP1=0, select bank1
   266     0017  0086               	movwf	6	;volatile
   267     0018                     l580:
   268                           
   269                           ;main.c: 31:     TRISC = 0;
   270     0018  0187               	clrf	7	;volatile
   271     0019                     l582:
   272                           
   273                           ;main.c: 32:     GIE = 1;
   274     0019  178B               	bsf	11,7	;volatile
   275     001A                     l584:
   276                           
   277                           ;main.c: 33:     INTE = 1;
   278     001A  160B               	bsf	11,4	;volatile
   279     001B                     l586:
   280                           
   281                           ;main.c: 34:     INTEDG = 1;
   282     001B  1701               	bsf	1,6	;volatile
   283     001C                     l588:
   284                           
   285                           ;main.c: 36:     {;main.c: 37:         if(bnt_state == 0)
   286     001C  0875               	movf	_bnt_state,w
   287     001D  1D03               	btfss	3,2
   288     001E  2820               	goto	u11
   289     001F  2821               	goto	u10
   290     0020                     u11:
   291     0020  2825               	goto	l24
   292     0021                     u10:
   293     0021                     l590:
   294                           
   295                           ;main.c: 38:         {;main.c: 39:             RC0 = 1;
   296     0021  1283               	bcf	3,5	;RP0=0, select bank0
   297     0022  1303               	bcf	3,6	;RP1=0, select bank0
   298     0023  1407               	bsf	7,0	;volatile
   299                           
   300                           ;main.c: 40:         }else
   301     0024  281C               	goto	l588
   302     0025                     l24:
   303                           
   304                           ;main.c: 41:         {;main.c: 42:             RC0 = 0;
   305     0025  1283               	bcf	3,5	;RP0=0, select bank0
   306     0026  1303               	bcf	3,6	;RP1=0, select bank0
   307     0027  1007               	bcf	7,0	;volatile
   308     0028                     l592:
   309                           
   310                           ;main.c: 43:             _delay((unsigned long)((1000)*(20000000/4000.0)));
   311     0028  301A               	movlw	26
   312     0029  00F4               	movwf	??_main+2
   313     002A  305E               	movlw	94
   314     002B  00F3               	movwf	??_main+1
   315     002C  306E               	movlw	110
   316     002D  00F2               	movwf	??_main
   317     002E                     u57:
   318     002E  0BF2               	decfsz	??_main,f
   319     002F  282E               	goto	u57
   320     0030  0BF3               	decfsz	??_main+1,f
   321     0031  282E               	goto	u57
   322     0032  0BF4               	decfsz	??_main+2,f
   323     0033  282E               	goto	u57
   324     0034  0000               	nop
   325     0035                     l594:
   326                           
   327                           ;main.c: 44:             RC0 = 1;
   328     0035  1283               	bcf	3,5	;RP0=0, select bank0
   329     0036  1303               	bcf	3,6	;RP1=0, select bank0
   330     0037  1407               	bsf	7,0	;volatile
   331                           
   332                           ;main.c: 45:             _delay((unsigned long)((1000)*(20000000/4000.0)));
   333     0038  301A               	movlw	26
   334     0039  00F4               	movwf	??_main+2
   335     003A  305E               	movlw	94
   336     003B  00F3               	movwf	??_main+1
   337     003C  306E               	movlw	110
   338     003D  00F2               	movwf	??_main
   339     003E                     u67:
   340     003E  0BF2               	decfsz	??_main,f
   341     003F  283E               	goto	u67
   342     0040  0BF3               	decfsz	??_main+1,f
   343     0041  283E               	goto	u67
   344     0042  0BF4               	decfsz	??_main+2,f
   345     0043  283E               	goto	u67
   346     0044  0000               	nop
   347     0045  281C               	goto	l588
   348     0046  120A  118A  280C   	ljmp	start
   349     0049                     __end_of_main:
   350                           
   351                           	psect	text1
   352     0049                     __ptext1:	
   353 ;; *************** function _ExINT *****************
   354 ;; Defined at:
   355 ;;		line 51 in file "main.c"
   356 ;; Parameters:    Size  Location     Type
   357 ;;		None
   358 ;; Auto vars:     Size  Location     Type
   359 ;;		None
   360 ;; Return value:  Size  Location     Type
   361 ;;                  1    wreg      void 
   362 ;; Registers used:
   363 ;;		wreg, status,2, status,0
   364 ;; Tracked objects:
   365 ;;		On entry : 0/0
   366 ;;		On exit  : 0/0
   367 ;;		Unchanged: 0/0
   368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   369 ;;      Params:         0       0       0       0       0
   370 ;;      Locals:         0       0       0       0       0
   371 ;;      Temps:          2       0       0       0       0
   372 ;;      Totals:         2       0       0       0       0
   373 ;;Total ram usage:        2 bytes
   374 ;; Hardware stack levels used: 1
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		Interrupt level 1
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382     0049                     _ExINT:	
   383                           ;psect for function _ExINT
   384                           
   385     0049                     i1l596:
   386                           
   387                           ;main.c: 53:     if(INTF == 1)
   388     0049  1C8B               	btfss	11,1	;volatile
   389     004A  284C               	goto	u2_21
   390     004B  284D               	goto	u2_20
   391     004C                     u2_21:
   392     004C  2856               	goto	i1l34
   393     004D                     u2_20:
   394     004D                     i1l598:
   395                           
   396                           ;main.c: 54:     {;main.c: 55:         INTF = 0;
   397     004D  108B               	bcf	11,1	;volatile
   398     004E                     i1l600:
   399                           
   400                           ;main.c: 56:         bnt_state = bnt_state ? 0 : 1;
   401     004E  0875               	movf	_bnt_state,w
   402     004F  1903               	btfsc	3,2
   403     0050  2852               	goto	u3_21
   404     0051  2854               	goto	u3_20
   405     0052                     u3_21:
   406     0052  3001               	movlw	1
   407     0053  2855               	goto	u4_20
   408     0054                     u3_20:
   409     0054  3000               	movlw	0
   410     0055                     u4_20:
   411     0055  00F5               	movwf	_bnt_state
   412     0056                     i1l34:
   413     0056  0871               	movf	??_ExINT+1,w
   414     0057  008A               	movwf	10
   415     0058  0E70               	swapf	??_ExINT,w
   416     0059  0083               	movwf	3
   417     005A  0EFE               	swapf	btemp,f
   418     005B  0E7E               	swapf	btemp,w
   419     005C  0009               	retfie
   420     005D                     __end_of_ExINT:
   421     0002                     ___latbits      equ	2
   422     007E                     btemp           set	126	;btemp
   423     007E                     wtemp0          set	126
   424                           
   425                           	psect	intentry
   426     0004                     __pintentry:	
   427                           ;incstack = 0
   428                           ; Regs used in _ExINT: [wreg+status,2+status,0]
   429                           
   430     0004                     interrupt_function:
   431     007E                     saved_w         set	btemp
   432     0004  00FE               	movwf	btemp
   433     0005  0E03               	swapf	3,w
   434     0006  00F0               	movwf	??_ExINT
   435     0007  080A               	movf	10,w
   436     0008  00F1               	movwf	??_ExINT+1
   437     0009  120A  118A  2849   	ljmp	_ExINT
   438                           
   439                           	psect	config
   440                           
   441                           ;Config register CONFIG @ 0x2007
   442                           ;	Oscillator Selection bits
   443                           ;	FOSC = EXTRC, RC oscillator
   444                           ;	Watchdog Timer Enable bit
   445                           ;	WDTE = OFF, WDT disabled
   446                           ;	Power-up Timer Enable bit
   447                           ;	PWRTE = OFF, PWRT disabled
   448                           ;	Brown-out Reset Enable bit
   449                           ;	BOREN = OFF, BOR disabled
   450                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   451                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   452                           ;	Data EEPROM Memory Code Protection bit
   453                           ;	CPD = OFF, Data EEPROM code protection off
   454                           ;	Flash Program Memory Write Enable bits
   455                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   456                           ;	In-Circuit Debugger Mode bit
   457                           ;	DEBUG = 0x1, unprogrammed default
   458                           ;	Flash Program Memory Code Protection bit
   459                           ;	CP = OFF, Code protection off
   460     2007                     	org	8199
   461     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ExINT in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ExINT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ExINT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ExINT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ExINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ExINT                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ExINT (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      5       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 12 21:46:11 2024

                     l24 0025                       u10 0021                       u11 0020  
                     u57 002E                       u67 003E                      l580 0018  
                    l590 0021                      l582 0019                      l592 0028  
                    l584 001A                      l594 0035                      l586 001B  
                    l578 0014                      l588 001C                      _GIE 005F  
                    _RC0 0038                     _INTE 005C                     _INTF 0059  
                   i1l34 0056                     u2_20 004D                     u2_21 004C  
                   u3_20 0054                     u3_21 0052                     u4_20 0055  
                   _main 0014                     btemp 007E                     start 000C  
                  ?_main 0070                    i1l600 004E                    i1l596 0049  
                  i1l598 004D                    _TRISB 0086                    _TRISC 0087  
                  _ExINT 0049                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0049  
                 ??_main 0072                   ?_ExINT 0070                   _INTEDG 040E  
                 saved_w 007E  __end_of__initialization 0010            __end_of_ExINT 005D  
         __pcstackCOMMON 0070                  ??_ExINT 0070               __pmaintext 0014  
             __pintentry 0004                  __ptext1 0049     end_of_initialization 0010  
    start_initialization 000F              __pbssCOMMON 0075                ___latbits 0002  
              _bnt_state 0075        interrupt_function 0004                 intlevel1 0000  
