

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 12 20:54:25 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0004                     fsr             equ	4
    46     0004                     fsr0            equ	4
    47     0000                     indf            equ	0
    48     0000                     indf0           equ	0
    49     0002                     pc              equ	2
    50     0002                     pcl             equ	2
    51     000A                     pclath          equ	10
    52     0003                     status          equ	3
    53     0000                     INDF            equ	0	;# 
    54     0001                     TMR0            equ	1	;# 
    55     0002                     PCL             equ	2	;# 
    56     0003                     STATUS          equ	3	;# 
    57     0004                     FSR             equ	4	;# 
    58     0005                     PORTA           equ	5	;# 
    59     0006                     PORTB           equ	6	;# 
    60     0007                     PORTC           equ	7	;# 
    61     0008                     PORTD           equ	8	;# 
    62     0009                     PORTE           equ	9	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001B                     CCPR2           equ	27	;# 
    83     001B                     CCPR2L          equ	27	;# 
    84     001C                     CCPR2H          equ	28	;# 
    85     001D                     CCP2CON         equ	29	;# 
    86     001E                     ADRESH          equ	30	;# 
    87     001F                     ADCON0          equ	31	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISA           equ	133	;# 
    90     0086                     TRISB           equ	134	;# 
    91     0087                     TRISC           equ	135	;# 
    92     0088                     TRISD           equ	136	;# 
    93     0089                     TRISE           equ	137	;# 
    94     008C                     PIE1            equ	140	;# 
    95     008D                     PIE2            equ	141	;# 
    96     008E                     PCON            equ	142	;# 
    97     0091                     SSPCON2         equ	145	;# 
    98     0092                     PR2             equ	146	;# 
    99     0093                     SSPADD          equ	147	;# 
   100     0094                     SSPSTAT         equ	148	;# 
   101     0098                     TXSTA           equ	152	;# 
   102     0099                     SPBRG           equ	153	;# 
   103     009C                     CMCON           equ	156	;# 
   104     009D                     CVRCON          equ	157	;# 
   105     009E                     ADRESL          equ	158	;# 
   106     009F                     ADCON1          equ	159	;# 
   107     010C                     EEDATA          equ	268	;# 
   108     010D                     EEADR           equ	269	;# 
   109     010E                     EEDATH          equ	270	;# 
   110     010F                     EEADRH          equ	271	;# 
   111     018C                     EECON1          equ	396	;# 
   112     018D                     EECON2          equ	397	;# 
   113     0000                     INDF            equ	0	;# 
   114     0001                     TMR0            equ	1	;# 
   115     0002                     PCL             equ	2	;# 
   116     0003                     STATUS          equ	3	;# 
   117     0004                     FSR             equ	4	;# 
   118     0005                     PORTA           equ	5	;# 
   119     0006                     PORTB           equ	6	;# 
   120     0007                     PORTC           equ	7	;# 
   121     0008                     PORTD           equ	8	;# 
   122     0009                     PORTE           equ	9	;# 
   123     000A                     PCLATH          equ	10	;# 
   124     000B                     INTCON          equ	11	;# 
   125     000C                     PIR1            equ	12	;# 
   126     000D                     PIR2            equ	13	;# 
   127     000E                     TMR1            equ	14	;# 
   128     000E                     TMR1L           equ	14	;# 
   129     000F                     TMR1H           equ	15	;# 
   130     0010                     T1CON           equ	16	;# 
   131     0011                     TMR2            equ	17	;# 
   132     0012                     T2CON           equ	18	;# 
   133     0013                     SSPBUF          equ	19	;# 
   134     0014                     SSPCON          equ	20	;# 
   135     0015                     CCPR1           equ	21	;# 
   136     0015                     CCPR1L          equ	21	;# 
   137     0016                     CCPR1H          equ	22	;# 
   138     0017                     CCP1CON         equ	23	;# 
   139     0018                     RCSTA           equ	24	;# 
   140     0019                     TXREG           equ	25	;# 
   141     001A                     RCREG           equ	26	;# 
   142     001B                     CCPR2           equ	27	;# 
   143     001B                     CCPR2L          equ	27	;# 
   144     001C                     CCPR2H          equ	28	;# 
   145     001D                     CCP2CON         equ	29	;# 
   146     001E                     ADRESH          equ	30	;# 
   147     001F                     ADCON0          equ	31	;# 
   148     0081                     OPTION_REG      equ	129	;# 
   149     0085                     TRISA           equ	133	;# 
   150     0086                     TRISB           equ	134	;# 
   151     0087                     TRISC           equ	135	;# 
   152     0088                     TRISD           equ	136	;# 
   153     0089                     TRISE           equ	137	;# 
   154     008C                     PIE1            equ	140	;# 
   155     008D                     PIE2            equ	141	;# 
   156     008E                     PCON            equ	142	;# 
   157     0091                     SSPCON2         equ	145	;# 
   158     0092                     PR2             equ	146	;# 
   159     0093                     SSPADD          equ	147	;# 
   160     0094                     SSPSTAT         equ	148	;# 
   161     0098                     TXSTA           equ	152	;# 
   162     0099                     SPBRG           equ	153	;# 
   163     009C                     CMCON           equ	156	;# 
   164     009D                     CVRCON          equ	157	;# 
   165     009E                     ADRESL          equ	158	;# 
   166     009F                     ADCON1          equ	159	;# 
   167     010C                     EEDATA          equ	268	;# 
   168     010D                     EEADR           equ	269	;# 
   169     010E                     EEDATH          equ	270	;# 
   170     010F                     EEADRH          equ	271	;# 
   171     018C                     EECON1          equ	396	;# 
   172     018D                     EECON2          equ	397	;# 
   173                           
   174                           	psect	strings
   175     0004                     __pstrings:
   176     0004                     stringtab:
   177     0004                     __stringtab:
   178     0004                     stringcode:	
   179                           ;	String table - string pointers are 1 byte each
   180                           
   181     0004                     stringdir:
   182     0004  3000               	movlw	high stringdir
   183     0005  008A               	movwf	10
   184     0006  0804               	movf	4,w
   185     0007  0A84               	incf	4,f
   186     0008  0782               	addwf	2,f
   187     0009                     __stringbase:
   188     0009  3400               	retlw	0
   189     000A                     __end_of__stringtab:
   190     000A                     STR_2:
   191     000A  3477               	retlw	119	;'w'
   192     000B  3465               	retlw	101	;'e'
   193     000C  346C               	retlw	108	;'l'
   194     000D  3463               	retlw	99	;'c'
   195     000E  346F               	retlw	111	;'o'
   196     000F  346D               	retlw	109	;'m'
   197     0010  3465               	retlw	101	;'e'
   198     0011  3400               	retlw	0
   199     0012                     STR_1:
   200     0012  3468               	retlw	104	;'h'
   201     0013  3465               	retlw	101	;'e'
   202     0014  346C               	retlw	108	;'l'
   203     0015  346C               	retlw	108	;'l'
   204     0016  346F               	retlw	111	;'o'
   205     0017  3400               	retlw	0
   206                           
   207                           	psect	cinit
   208     07FC                     start_initialization:	
   209                           ; #config settings
   210                           
   211     07FC                     __initialization:
   212     07FC                     end_of_initialization:	
   213                           ;End of C runtime variable initialization code
   214                           
   215     07FC                     __end_of__initialization:
   216     07FC  0183               	clrf	3
   217     07FD  120A  118A  2FC5   	ljmp	_main	;jump to C main() function
   218                           
   219                           	psect	cstackCOMMON
   220     0070                     __pcstackCOMMON:
   221     0070                     ?_main:
   222     0070                     ?_LCD_Init:	
   223                           ; 1 bytes @ 0x0
   224                           
   225     0070                     ?_LCD_Clear:	
   226                           ; 2 bytes @ 0x0
   227                           
   228     0070                     ?_LCD_Gotoxy:	
   229                           ; 2 bytes @ 0x0
   230                           
   231     0070                     ?_LCD_PutString:	
   232                           ; 2 bytes @ 0x0
   233                           
   234     0070                     ??_LCD_Init:	
   235                           ; 2 bytes @ 0x0
   236                           
   237     0070                     ??_LCD_Clear:	
   238                           ; 1 bytes @ 0x0
   239                           
   240     0070                     ??_LCD_Gotoxy:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ??_LCD_PutString:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ??_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249                           
   250                           ; 1 bytes @ 0x0
   251     0070                     	ds	4
   252                           
   253                           	psect	maintext
   254     07C5                     __pmaintext:	
   255 ;;
   256 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   257 ;;
   258 ;; *************** function _main *****************
   259 ;; Defined at:
   260 ;;		line 33 in file "main.c"
   261 ;; Parameters:    Size  Location     Type
   262 ;;		None
   263 ;; Auto vars:     Size  Location     Type
   264 ;;		None
   265 ;; Return value:  Size  Location     Type
   266 ;;                  1    wreg      void 
   267 ;; Registers used:
   268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   269 ;; Tracked objects:
   270 ;;		On entry : B00/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   274 ;;      Params:         0       0       0       0       0
   275 ;;      Locals:         0       0       0       0       0
   276 ;;      Temps:          0       0       0       0       0
   277 ;;      Totals:         0       0       0       0       0
   278 ;;Total ram usage:        0 bytes
   279 ;; Hardware stack levels required when called: 1
   280 ;; This function calls:
   281 ;;		_LCD_Clear
   282 ;;		_LCD_Gotoxy
   283 ;;		_LCD_Init
   284 ;;		_LCD_PutString
   285 ;; This function is called by:
   286 ;;		Startup code after reset
   287 ;; This function uses a non-reentrant model
   288 ;;
   289                           
   290     07C5                     _main:	
   291                           ;psect for function _main
   292                           
   293     07C5                     l562:	
   294                           ;incstack = 0
   295                           ; Regs used in _main: [allreg]
   296                           
   297                           
   298                           ;main.c: 35:     LCD_Init();
   299     07C5  120A  118A  2000  120A  118A  	fcall	_LCD_Init
   300                           
   301                           ;main.c: 36:     LCD_Clear();
   302     07CA  120A  118A  2000  120A  118A  	fcall	_LCD_Clear
   303                           
   304                           ;main.c: 37:     LCD_Gotoxy(0,0);
   305     07CF  3000               	movlw	0
   306     07D0  00F0               	movwf	?_LCD_Gotoxy
   307     07D1  00F1               	movwf	?_LCD_Gotoxy+1
   308     07D2  3000               	movlw	0
   309     07D3  00F2               	movwf	?_LCD_Gotoxy+2
   310     07D4  00F3               	movwf	?_LCD_Gotoxy+3
   311     07D5  120A  118A  2000  120A  118A  	fcall	_LCD_Gotoxy
   312                           
   313                           ;main.c: 38:     LCD_PutString("hello");
   314     07DA  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   315     07DB  00F0               	movwf	?_LCD_PutString
   316     07DC  3080               	movlw	128
   317     07DD  00F1               	movwf	?_LCD_PutString+1
   318     07DE  120A  118A  2000  120A  118A  	fcall	_LCD_PutString
   319                           
   320                           ;main.c: 39:     LCD_Gotoxy(1,0);
   321     07E3  3001               	movlw	1
   322     07E4  00F0               	movwf	?_LCD_Gotoxy
   323     07E5  3000               	movlw	0
   324     07E6  00F1               	movwf	?_LCD_Gotoxy+1
   325     07E7  3000               	movlw	0
   326     07E8  00F2               	movwf	?_LCD_Gotoxy+2
   327     07E9  00F3               	movwf	?_LCD_Gotoxy+3
   328     07EA  120A  118A  2000  120A  118A  	fcall	_LCD_Gotoxy
   329                           
   330                           ;main.c: 40:     LCD_PutString("welcome");
   331     07EF  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   332     07F0  00F0               	movwf	?_LCD_PutString
   333     07F1  3080               	movlw	128
   334     07F2  00F1               	movwf	?_LCD_PutString+1
   335     07F3  120A  118A  2000  120A  118A  	fcall	_LCD_PutString
   336     07F8                     l13:	
   337                           ;main.c: 42:     while(1)
   338                           
   339     07F8                     l14:	
   340                           ;main.c: 43:     {;main.c: 45:     }
   341                           
   342     07F8  2FF8               	goto	l13
   343     07F9  120A  118A  2800   	ljmp	start
   344     07FC                     __end_of_main:
   345     0002                     ___latbits      equ	2
   346     007E                     btemp           set	126	;btemp
   347     007E                     wtemp0          set	126
   348                           
   349                           	psect	config
   350                           
   351                           ;Config register CONFIG @ 0x2007
   352                           ;	Oscillator Selection bits
   353                           ;	FOSC = HS, HS oscillator
   354                           ;	Watchdog Timer Enable bit
   355                           ;	WDTE = OFF, WDT disabled
   356                           ;	Power-up Timer Enable bit
   357                           ;	PWRTE = OFF, PWRT disabled
   358                           ;	Brown-out Reset Enable bit
   359                           ;	BOREN = OFF, BOR disabled
   360                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   361                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   362                           ;	Data EEPROM Memory Code Protection bit
   363                           ;	CPD = OFF, Data EEPROM code protection off
   364                           ;	Flash Program Memory Write Enable bits
   365                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   366                           ;	In-Circuit Debugger Mode bit
   367                           ;	DEBUG = 0x1, unprogrammed default
   368                           ;	Flash Program Memory Code Protection bit
   369                           ;	CP = OFF, Code protection off
   370     2007                     	org	8199
   371     2007  3F3A               	dw	16186

Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      0       0
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                          _LCD_Clear
                         _LCD_Gotoxy
                           _LCD_Init
                      _LCD_PutString
 ---------------------------------------------------------------------------------
 (1) _LCD_PutString                                        2     0      2       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Gotoxy                                           4     0      4       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
   _LCD_Gotoxy
   _LCD_Init
   _LCD_PutString

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      0       0      0.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       0      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 12 20:54:25 2024

                      pc 0002              ?_LCD_Gotoxy 0070                       l13 07F8  
                     l14 07F8                       fsr 0004                      l562 07C5  
                   STR_1 0012                     STR_2 000A            _LCD_PutString 0000  
                   _main 07C5                     btemp 007E                     start 0000  
                  ?_main 0070           ?_LCD_PutString 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0070          ??_LCD_PutString 0070  
__end_of__initialization 07FC                ?_LCD_Init 0070           __pcstackCOMMON 0070  
           ??_LCD_Gotoxy 0070               ??_LCD_Init 0070               __pmaintext 07C5  
             __stringtab 0004                _LCD_Clear 0000     end_of_initialization 07FC  
             ?_LCD_Clear 0070      start_initialization 07FC                ___latbits 0002  
            ??_LCD_Clear 0070                __pstrings 0004                 _LCD_Init 0000  
            __stringbase 0009       __end_of__stringtab 000A               _LCD_Gotoxy 0000  
              stringcode 0004                 stringdir 0004                 stringtab 0004  
