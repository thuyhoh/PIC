

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 12 23:36:38 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,space=0,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     0091                     SSPCON2         equ	145	;# 
   101     0092                     PR2             equ	146	;# 
   102     0093                     SSPADD          equ	147	;# 
   103     0094                     SSPSTAT         equ	148	;# 
   104     0098                     TXSTA           equ	152	;# 
   105     0099                     SPBRG           equ	153	;# 
   106     009C                     CMCON           equ	156	;# 
   107     009D                     CVRCON          equ	157	;# 
   108     009E                     ADRESL          equ	158	;# 
   109     009F                     ADCON1          equ	159	;# 
   110     010C                     EEDATA          equ	268	;# 
   111     010D                     EEADR           equ	269	;# 
   112     010E                     EEDATH          equ	270	;# 
   113     010F                     EEADRH          equ	271	;# 
   114     018C                     EECON1          equ	396	;# 
   115     018D                     EECON2          equ	397	;# 
   116     0000                     INDF            equ	0	;# 
   117     0001                     TMR0            equ	1	;# 
   118     0002                     PCL             equ	2	;# 
   119     0003                     STATUS          equ	3	;# 
   120     0004                     FSR             equ	4	;# 
   121     0005                     PORTA           equ	5	;# 
   122     0006                     PORTB           equ	6	;# 
   123     0007                     PORTC           equ	7	;# 
   124     0008                     PORTD           equ	8	;# 
   125     0009                     PORTE           equ	9	;# 
   126     000A                     PCLATH          equ	10	;# 
   127     000B                     INTCON          equ	11	;# 
   128     000C                     PIR1            equ	12	;# 
   129     000D                     PIR2            equ	13	;# 
   130     000E                     TMR1            equ	14	;# 
   131     000E                     TMR1L           equ	14	;# 
   132     000F                     TMR1H           equ	15	;# 
   133     0010                     T1CON           equ	16	;# 
   134     0011                     TMR2            equ	17	;# 
   135     0012                     T2CON           equ	18	;# 
   136     0013                     SSPBUF          equ	19	;# 
   137     0014                     SSPCON          equ	20	;# 
   138     0015                     CCPR1           equ	21	;# 
   139     0015                     CCPR1L          equ	21	;# 
   140     0016                     CCPR1H          equ	22	;# 
   141     0017                     CCP1CON         equ	23	;# 
   142     0018                     RCSTA           equ	24	;# 
   143     0019                     TXREG           equ	25	;# 
   144     001A                     RCREG           equ	26	;# 
   145     001B                     CCPR2           equ	27	;# 
   146     001B                     CCPR2L          equ	27	;# 
   147     001C                     CCPR2H          equ	28	;# 
   148     001D                     CCP2CON         equ	29	;# 
   149     001E                     ADRESH          equ	30	;# 
   150     001F                     ADCON0          equ	31	;# 
   151     0081                     OPTION_REG      equ	129	;# 
   152     0085                     TRISA           equ	133	;# 
   153     0086                     TRISB           equ	134	;# 
   154     0087                     TRISC           equ	135	;# 
   155     0088                     TRISD           equ	136	;# 
   156     0089                     TRISE           equ	137	;# 
   157     008C                     PIE1            equ	140	;# 
   158     008D                     PIE2            equ	141	;# 
   159     008E                     PCON            equ	142	;# 
   160     0091                     SSPCON2         equ	145	;# 
   161     0092                     PR2             equ	146	;# 
   162     0093                     SSPADD          equ	147	;# 
   163     0094                     SSPSTAT         equ	148	;# 
   164     0098                     TXSTA           equ	152	;# 
   165     0099                     SPBRG           equ	153	;# 
   166     009C                     CMCON           equ	156	;# 
   167     009D                     CVRCON          equ	157	;# 
   168     009E                     ADRESL          equ	158	;# 
   169     009F                     ADCON1          equ	159	;# 
   170     010C                     EEDATA          equ	268	;# 
   171     010D                     EEADR           equ	269	;# 
   172     010E                     EEDATH          equ	270	;# 
   173     010F                     EEADRH          equ	271	;# 
   174     018C                     EECON1          equ	396	;# 
   175     018D                     EECON2          equ	397	;# 
   176     0001                     _TMR0           set	1
   177     0030                     _RB0            set	48
   178     005A                     _TMR0IF         set	90
   179     005D                     _TMR0IE         set	93
   180     005E                     _PEIE           set	94
   181     005F                     _GIE            set	95
   182     0086                     _TRISB          set	134
   183     040A                     _PS2            set	1034
   184     0409                     _PS1            set	1033
   185     0408                     _PS0            set	1032
   186     040B                     _PSA            set	1035
   187     040D                     _T0CS           set	1037
   188                           
   189                           	psect	cinit
   190     000F                     start_initialization:	
   191                           ; #config settings
   192                           
   193     000F                     __initialization:
   194                           
   195                           ; Clear objects allocated to COMMON
   196     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   197     0010                     end_of_initialization:	
   198                           ;End of C runtime variable initialization code
   199                           
   200     0010                     __end_of__initialization:
   201     0010  0183               	clrf	3
   202     0011  120A  118A  2833   	ljmp	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMMON
   205     0072                     __pbssCOMMON:
   206     0072                     _ledState:
   207     0072                     	ds	1
   208                           
   209                           	psect	cstackCOMMON
   210     0070                     __pcstackCOMMON:
   211     0070                     ?_Timer0_1ms_IT:
   212     0070                     ?_main:	
   213                           ; 1 bytes @ 0x0
   214                           
   215     0070                     ?_TIMIRQ:	
   216                           ; 1 bytes @ 0x0
   217                           
   218     0070                     ??_TIMIRQ:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           ; 1 bytes @ 0x0
   223     0070                     	ds	2
   224     0072                     ??_Timer0_1ms_IT:
   225     0072                     ??_main:	
   226                           ; 1 bytes @ 0x2
   227                           
   228                           
   229                           	psect	maintext
   230     0033                     __pmaintext:	
   231                           ; 1 bytes @ 0x2
   232 ;;
   233 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   234 ;;
   235 ;; *************** function _main *****************
   236 ;; Defined at:
   237 ;;		line 23 in file "main.c"
   238 ;; Parameters:    Size  Location     Type
   239 ;;		None
   240 ;; Auto vars:     Size  Location     Type
   241 ;;		None
   242 ;; Return value:  Size  Location     Type
   243 ;;                  1    wreg      void 
   244 ;; Registers used:
   245 ;;		status,2, status,0, pclath, cstack
   246 ;; Tracked objects:
   247 ;;		On entry : B00/0
   248 ;;		On exit  : 0/0
   249 ;;		Unchanged: 0/0
   250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   251 ;;      Params:         0       0       0       0       0
   252 ;;      Locals:         0       0       0       0       0
   253 ;;      Temps:          0       0       0       0       0
   254 ;;      Totals:         0       0       0       0       0
   255 ;;Total ram usage:        0 bytes
   256 ;; Hardware stack levels required when called: 2
   257 ;; This function calls:
   258 ;;		_Timer0_1ms_IT
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264     0033                     _main:	
   265                           ;psect for function _main
   266                           
   267     0033                     l591:	
   268                           ;incstack = 0
   269                           ; Regs used in _main: [status,2+status,0+pclath+cstack]
   270                           
   271                           
   272                           ;main.c: 25:     Timer0_1ms_IT();
   273     0033  120A  118A  2024  120A  118A  	fcall	_Timer0_1ms_IT
   274     0038                     l593:
   275                           
   276                           ;main.c: 26:     TRISB = 0x00;
   277     0038  1683               	bsf	3,5	;RP0=1, select bank1
   278     0039  1303               	bcf	3,6	;RP1=0, select bank1
   279     003A  0186               	clrf	6	;volatile
   280     003B                     l33:	
   281                           ;main.c: 27:     while(1)
   282                           
   283     003B                     l34:	
   284                           ;main.c: 28:     {;main.c: 30:     }
   285                           
   286     003B  283B               	goto	l33
   287     003C  120A  118A  280C   	ljmp	start
   288     003F                     __end_of_main:
   289                           
   290                           	psect	text1
   291     0024                     __ptext1:	
   292 ;; *************** function _Timer0_1ms_IT *****************
   293 ;; Defined at:
   294 ;;		line 34 in file "main.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		None
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          0       0       0       0       0
   311 ;;      Totals:         0       0       0       0       0
   312 ;;Total ram usage:        0 bytes
   313 ;; Hardware stack levels used: 1
   314 ;; Hardware stack levels required when called: 1
   315 ;; This function calls:
   316 ;;		Nothing
   317 ;; This function is called by:
   318 ;;		_main
   319 ;; This function uses a non-reentrant model
   320 ;;
   321                           
   322     0024                     _Timer0_1ms_IT:	
   323                           ;psect for function _Timer0_1ms_IT
   324                           
   325     0024                     l589:	
   326                           ;incstack = 0
   327                           ; Regs used in _Timer0_1ms_IT: []
   328                           
   329                           
   330                           ;main.c: 36:     GIE = 1;
   331     0024  178B               	bsf	11,7	;volatile
   332                           
   333                           ;main.c: 37:     PEIE = 1;
   334     0025  170B               	bsf	11,6	;volatile
   335                           
   336                           ;main.c: 38:     TMR0IE = 1;
   337     0026  168B               	bsf	11,5	;volatile
   338                           
   339                           ;main.c: 40:     T0CS = 0;
   340     0027  1683               	bsf	3,5	;RP0=1, select bank1
   341     0028  1303               	bcf	3,6	;RP1=0, select bank1
   342     0029  1281               	bcf	1,5	;volatile
   343                           
   344                           ;main.c: 41:     PSA = 0;
   345     002A  1181               	bcf	1,3	;volatile
   346                           
   347                           ;main.c: 43:     PS0 = 1;
   348     002B  1401               	bsf	1,0	;volatile
   349                           
   350                           ;main.c: 44:     PS1 = 1;
   351     002C  1481               	bsf	1,1	;volatile
   352                           
   353                           ;main.c: 45:     PS2 = 1;
   354     002D  1501               	bsf	1,2	;volatile
   355                           
   356                           ;main.c: 47:     TMR0 = 236;
   357     002E  30EC               	movlw	236
   358     002F  1283               	bcf	3,5	;RP0=0, select bank0
   359     0030  1303               	bcf	3,6	;RP1=0, select bank0
   360     0031  0081               	movwf	1	;volatile
   361     0032                     l39:
   362     0032  0008               	return
   363     0033                     __end_of_Timer0_1ms_IT:
   364                           
   365                           	psect	text2
   366     0014                     __ptext2:	
   367 ;; *************** function _TIMIRQ *****************
   368 ;; Defined at:
   369 ;;		line 51 in file "main.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   383 ;;      Params:         0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0
   385 ;;      Temps:          2       0       0       0       0
   386 ;;      Totals:         2       0       0       0       0
   387 ;;Total ram usage:        2 bytes
   388 ;; Hardware stack levels used: 1
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		Interrupt level 1
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396     0014                     _TIMIRQ:	
   397                           ;psect for function _TIMIRQ
   398                           
   399     0014                     i1l595:
   400                           
   401                           ;main.c: 53:     if(TMR0IF == 1)
   402     0014  1D0B               	btfss	11,2	;volatile
   403     0015  2817               	goto	u1_21
   404     0016  2818               	goto	u1_20
   405     0017                     u1_21:
   406     0017  281D               	goto	i1l45
   407     0018                     u1_20:
   408     0018                     i1l597:
   409                           
   410                           ;main.c: 54:     {;main.c: 55:         TMR0IF = 0;
   411     0018  110B               	bcf	11,2	;volatile
   412     0019                     i1l599:
   413                           
   414                           ;main.c: 56:         RB0 = ~RB0;
   415     0019  3001               	movlw	1
   416     001A  1283               	bcf	3,5	;RP0=0, select bank0
   417     001B  1303               	bcf	3,6	;RP1=0, select bank0
   418     001C  0686               	xorwf	6,f
   419     001D                     i1l45:
   420     001D  0871               	movf	??_TIMIRQ+1,w
   421     001E  008A               	movwf	10
   422     001F  0E70               	swapf	??_TIMIRQ,w
   423     0020  0083               	movwf	3
   424     0021  0EFE               	swapf	btemp,f
   425     0022  0E7E               	swapf	btemp,w
   426     0023  0009               	retfie
   427     0024                     __end_of_TIMIRQ:
   428     0002                     ___latbits      equ	2
   429     007E                     btemp           set	126	;btemp
   430     007E                     wtemp0          set	126
   431                           
   432                           	psect	intentry
   433     0004                     __pintentry:	
   434                           ;incstack = 0
   435                           ; Regs used in _TIMIRQ: [wreg]
   436                           
   437     0004                     interrupt_function:
   438     007E                     saved_w         set	btemp
   439     0004  00FE               	movwf	btemp
   440     0005  0E03               	swapf	3,w
   441     0006  00F0               	movwf	??_TIMIRQ
   442     0007  080A               	movf	10,w
   443     0008  00F1               	movwf	??_TIMIRQ+1
   444     0009  120A  118A  2814   	ljmp	_TIMIRQ
   445                           
   446                           	psect	config
   447                           
   448                           ;Config register CONFIG @ 0x2007
   449                           ;	Oscillator Selection bits
   450                           ;	FOSC = HS, HS oscillator
   451                           ;	Watchdog Timer Enable bit
   452                           ;	WDTE = OFF, WDT disabled
   453                           ;	Power-up Timer Enable bit
   454                           ;	PWRTE = OFF, PWRT disabled
   455                           ;	Brown-out Reset Enable bit
   456                           ;	BOREN = OFF, BOR disabled
   457                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   458                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   459                           ;	Data EEPROM Memory Code Protection bit
   460                           ;	CPD = OFF, Data EEPROM code protection off
   461                           ;	Flash Program Memory Write Enable bits
   462                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   463                           ;	In-Circuit Debugger Mode bit
   464                           ;	DEBUG = 0x1, unprogrammed default
   465                           ;	Flash Program Memory Code Protection bit
   466                           ;	CP = OFF, Code protection off
   467     2007                     	org	8199
   468     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _TIMIRQ in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TIMIRQ in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMIRQ in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMIRQ in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMIRQ in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                      _Timer0_1ms_IT
 ---------------------------------------------------------------------------------
 (1) _Timer0_1ms_IT                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _TIMIRQ                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_1ms_IT

 _TIMIRQ (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      2       3     21.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 12 23:36:38 2024

                     l33 003B                       l34 003B                       l39 0032  
                    l591 0033                      l593 0038                      l589 0024  
                    _GIE 005F                      _RB0 0030                      _PS0 0408  
                    _PS1 0409                      _PS2 040A                      _PSA 040B  
                   _T0CS 040D                     _PEIE 005E                     i1l45 001D  
                   _TMR0 0001                     u1_20 0018                     u1_21 0017  
                   _main 0033                     btemp 007E                     start 000C  
                  ?_main 0070                    i1l595 0014                    i1l597 0018  
                  i1l599 0019                    _TRISB 0086    __end_of_Timer0_1ms_IT 0033  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 003F                   ??_main 0072  
                 _TMR0IE 005D                   _TMR0IF 005A                   _TIMIRQ 0014  
                 saved_w 007E  __end_of__initialization 0010           __pcstackCOMMON 0070  
                ?_TIMIRQ 0070               __pmaintext 0033               __pintentry 0004  
                __ptext1 0024                  __ptext2 0014     end_of_initialization 0010  
         __end_of_TIMIRQ 0024      start_initialization 000F            _Timer0_1ms_IT 0024  
               ??_TIMIRQ 0070              __pbssCOMMON 0072                ___latbits 0002  
         ?_Timer0_1ms_IT 0070        interrupt_function 0004          ??_Timer0_1ms_IT 0072  
               _ledState 0072                 intlevel1 0000  
