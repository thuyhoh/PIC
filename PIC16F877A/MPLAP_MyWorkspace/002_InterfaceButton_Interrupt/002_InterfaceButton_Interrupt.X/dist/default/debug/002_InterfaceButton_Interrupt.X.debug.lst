

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 12 21:40:14 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     8                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,space=0,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     0059                     _INTF           set	89
   176     0038                     _RC0            set	56
   177     005C                     _INTE           set	92
   178     005F                     _GIE            set	95
   179     0087                     _TRISC          set	135
   180     0086                     _TRISB          set	134
   181                           
   182                           	psect	cinit
   183     000F                     start_initialization:	
   184                           ; #config settings
   185                           
   186     000F                     __initialization:
   187                           
   188                           ; Clear objects allocated to COMMON
   189     000F  01F5               	clrf	__pbssCOMMON& (0+127)
   190     0010                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     0010                     __end_of__initialization:
   194     0010  0183               	clrf	3
   195     0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMMON
   198     0075                     __pbssCOMMON:
   199     0075                     _bnt_state:
   200     0075                     	ds	1
   201                           
   202                           	psect	cstackCOMMON
   203     0070                     __pcstackCOMMON:
   204     0070                     ?_main:
   205     0070                     ?_ExINT:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ??_ExINT:	
   209                           ; 1 bytes @ 0x0
   210                           
   211                           
   212                           ; 1 bytes @ 0x0
   213     0070                     	ds	2
   214     0072                     ??_main:
   215                           
   216                           ; 1 bytes @ 0x2
   217     0072                     	ds	3
   218                           
   219                           	psect	maintext
   220     0014                     __pmaintext:	
   221 ;;
   222 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   223 ;;
   224 ;; *************** function _main *****************
   225 ;; Defined at:
   226 ;;		line 28 in file "main.c"
   227 ;; Parameters:    Size  Location     Type
   228 ;;		None
   229 ;; Auto vars:     Size  Location     Type
   230 ;;		None
   231 ;; Return value:  Size  Location     Type
   232 ;;                  1    wreg      void 
   233 ;; Registers used:
   234 ;;		wreg, status,2, status,0
   235 ;; Tracked objects:
   236 ;;		On entry : B00/0
   237 ;;		On exit  : 0/0
   238 ;;		Unchanged: 0/0
   239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   240 ;;      Params:         0       0       0       0       0
   241 ;;      Locals:         0       0       0       0       0
   242 ;;      Temps:          3       0       0       0       0
   243 ;;      Totals:         3       0       0       0       0
   244 ;;Total ram usage:        3 bytes
   245 ;; Hardware stack levels required when called: 1
   246 ;; This function calls:
   247 ;;		Nothing
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253     0014                     _main:	
   254                           ;psect for function _main
   255                           
   256     0014                     l576:	
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg+status,2+status,0]
   259                           
   260                           
   261                           ;main.c: 30:     TRISB = 1;
   262     0014  3001               	movlw	1
   263     0015  1683               	bsf	3,5	;RP0=1, select bank1
   264     0016  1303               	bcf	3,6	;RP1=0, select bank1
   265     0017  0086               	movwf	6	;volatile
   266     0018                     l578:
   267                           
   268                           ;main.c: 31:     TRISC = 0;
   269     0018  0187               	clrf	7	;volatile
   270     0019                     l580:
   271                           
   272                           ;main.c: 32:     GIE = 1;
   273     0019  178B               	bsf	11,7	;volatile
   274     001A                     l582:
   275                           
   276                           ;main.c: 33:     INTE = 1;
   277     001A  160B               	bsf	11,4	;volatile
   278     001B                     l584:
   279                           
   280                           ;main.c: 35:     {;main.c: 36:         if(bnt_state == 0)
   281     001B  0875               	movf	_bnt_state,w
   282     001C  1D03               	btfss	3,2
   283     001D  281F               	goto	u11
   284     001E  2820               	goto	u10
   285     001F                     u11:
   286     001F  2824               	goto	l22
   287     0020                     u10:
   288     0020                     l586:
   289                           
   290                           ;main.c: 37:         {;main.c: 38:             RC0 = 1;
   291     0020  1283               	bcf	3,5	;RP0=0, select bank0
   292     0021  1303               	bcf	3,6	;RP1=0, select bank0
   293     0022  1407               	bsf	7,0	;volatile
   294                           
   295                           ;main.c: 39:         }else
   296     0023  281B               	goto	l584
   297     0024                     l22:
   298                           
   299                           ;main.c: 40:         {;main.c: 41:             RC0 = 0;
   300     0024  1283               	bcf	3,5	;RP0=0, select bank0
   301     0025  1303               	bcf	3,6	;RP1=0, select bank0
   302     0026  1007               	bcf	7,0	;volatile
   303     0027                     l588:
   304                           
   305                           ;main.c: 42:             _delay((unsigned long)((1000)*(20000000/4000.0)));
   306     0027  301A               	movlw	26
   307     0028  00F4               	movwf	??_main+2
   308     0029  305E               	movlw	94
   309     002A  00F3               	movwf	??_main+1
   310     002B  306E               	movlw	110
   311     002C  00F2               	movwf	??_main
   312     002D                     u57:
   313     002D  0BF2               	decfsz	??_main,f
   314     002E  282D               	goto	u57
   315     002F  0BF3               	decfsz	??_main+1,f
   316     0030  282D               	goto	u57
   317     0031  0BF4               	decfsz	??_main+2,f
   318     0032  282D               	goto	u57
   319     0033  0000               	nop
   320     0034                     l590:
   321                           
   322                           ;main.c: 43:             RC0 = 1;
   323     0034  1283               	bcf	3,5	;RP0=0, select bank0
   324     0035  1303               	bcf	3,6	;RP1=0, select bank0
   325     0036  1407               	bsf	7,0	;volatile
   326                           
   327                           ;main.c: 44:             _delay((unsigned long)((1000)*(20000000/4000.0)));
   328     0037  301A               	movlw	26
   329     0038  00F4               	movwf	??_main+2
   330     0039  305E               	movlw	94
   331     003A  00F3               	movwf	??_main+1
   332     003B  306E               	movlw	110
   333     003C  00F2               	movwf	??_main
   334     003D                     u67:
   335     003D  0BF2               	decfsz	??_main,f
   336     003E  283D               	goto	u67
   337     003F  0BF3               	decfsz	??_main+1,f
   338     0040  283D               	goto	u67
   339     0041  0BF4               	decfsz	??_main+2,f
   340     0042  283D               	goto	u67
   341     0043  0000               	nop
   342     0044  281B               	goto	l584
   343     0045  120A  118A  280C   	ljmp	start
   344     0048                     __end_of_main:
   345                           
   346                           	psect	text1
   347     0048                     __ptext1:	
   348 ;; *************** function _ExINT *****************
   349 ;; Defined at:
   350 ;;		line 50 in file "main.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0
   366 ;;      Temps:          2       0       0       0       0
   367 ;;      Totals:         2       0       0       0       0
   368 ;;Total ram usage:        2 bytes
   369 ;; Hardware stack levels used: 1
   370 ;; This function calls:
   371 ;;		Nothing
   372 ;; This function is called by:
   373 ;;		Interrupt level 1
   374 ;; This function uses a non-reentrant model
   375 ;;
   376                           
   377     0048                     _ExINT:	
   378                           ;psect for function _ExINT
   379                           
   380     0048                     i1l592:
   381                           
   382                           ;main.c: 52:     if(INTF == 1)
   383     0048  1C8B               	btfss	11,1	;volatile
   384     0049  284B               	goto	u2_21
   385     004A  284C               	goto	u2_20
   386     004B                     u2_21:
   387     004B  2855               	goto	i1l32
   388     004C                     u2_20:
   389     004C                     i1l594:
   390                           
   391                           ;main.c: 53:     {;main.c: 54:         INTF = 0;
   392     004C  108B               	bcf	11,1	;volatile
   393     004D                     i1l596:
   394                           
   395                           ;main.c: 55:         bnt_state = bnt_state ? 0 : 1;
   396     004D  0875               	movf	_bnt_state,w
   397     004E  1903               	btfsc	3,2
   398     004F  2851               	goto	u3_21
   399     0050  2853               	goto	u3_20
   400     0051                     u3_21:
   401     0051  3001               	movlw	1
   402     0052  2854               	goto	u4_20
   403     0053                     u3_20:
   404     0053  3000               	movlw	0
   405     0054                     u4_20:
   406     0054  00F5               	movwf	_bnt_state
   407     0055                     i1l32:
   408     0055  0871               	movf	??_ExINT+1,w
   409     0056  008A               	movwf	10
   410     0057  0E70               	swapf	??_ExINT,w
   411     0058  0083               	movwf	3
   412     0059  0EFE               	swapf	btemp,f
   413     005A  0E7E               	swapf	btemp,w
   414     005B  0009               	retfie
   415     005C                     __end_of_ExINT:
   416     0002                     ___latbits      equ	2
   417     007E                     btemp           set	126	;btemp
   418     007E                     wtemp0          set	126
   419                           
   420                           	psect	intentry
   421     0004                     __pintentry:	
   422                           ;incstack = 0
   423                           ; Regs used in _ExINT: [wreg+status,2+status,0]
   424                           
   425     0004                     interrupt_function:
   426     007E                     saved_w         set	btemp
   427     0004  00FE               	movwf	btemp
   428     0005  0E03               	swapf	3,w
   429     0006  00F0               	movwf	??_ExINT
   430     0007  080A               	movf	10,w
   431     0008  00F1               	movwf	??_ExINT+1
   432     0009  120A  118A  2848   	ljmp	_ExINT
   433                           
   434                           	psect	config
   435                           
   436                           ;Config register CONFIG @ 0x2007
   437                           ;	Oscillator Selection bits
   438                           ;	FOSC = EXTRC, RC oscillator
   439                           ;	Watchdog Timer Enable bit
   440                           ;	WDTE = OFF, WDT disabled
   441                           ;	Power-up Timer Enable bit
   442                           ;	PWRTE = OFF, PWRT disabled
   443                           ;	Brown-out Reset Enable bit
   444                           ;	BOREN = OFF, BOR disabled
   445                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   446                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   447                           ;	Data EEPROM Memory Code Protection bit
   448                           ;	CPD = OFF, Data EEPROM code protection off
   449                           ;	Flash Program Memory Write Enable bits
   450                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   451                           ;	In-Circuit Debugger Mode bit
   452                           ;	DEBUG = 0x1, unprogrammed default
   453                           ;	Flash Program Memory Code Protection bit
   454                           ;	CP = OFF, Code protection off
   455     2007                     	org	8199
   456     2007  3F3B               	dw	16187

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ExINT in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ExINT in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ExINT in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ExINT in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ExINT in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ExINT                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ExINT (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      5       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 12 21:40:14 2024

                     l22 0024                       u10 0020                       u11 001F  
                     u57 002D                       u67 003D                      l580 0019  
                    l590 0034                      l582 001A                      l584 001B  
                    l576 0014                      l586 0020                      l578 0018  
                    l588 0027                      _GIE 005F                      _RC0 0038  
                   _INTE 005C                     _INTF 0059                     i1l32 0055  
                   u2_20 004C                     u2_21 004B                     u3_20 0053  
                   u3_21 0051                     u4_20 0054                     _main 0014  
                   btemp 007E                     start 000C                    ?_main 0070  
                  i1l592 0048                    i1l594 004C                    i1l596 004D  
                  _TRISB 0086                    _TRISC 0087                    _ExINT 0048  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F             __end_of_main 0048                   ??_main 0072  
                 ?_ExINT 0070                   saved_w 007E  __end_of__initialization 0010  
          __end_of_ExINT 005C           __pcstackCOMMON 0070                  ??_ExINT 0070  
             __pmaintext 0014               __pintentry 0004                  __ptext1 0048  
   end_of_initialization 0010      start_initialization 000F              __pbssCOMMON 0075  
              ___latbits 0002                _bnt_state 0075        interrupt_function 0004  
               intlevel1 0000  
