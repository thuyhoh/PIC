

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 12 22:56:30 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     0001                     _TMR0           set	1
   176     005A                     _TMR0IF         set	90
   177     0030                     _RB0            set	48
   178     040A                     _PS2            set	1034
   179     0409                     _PS1            set	1033
   180     0408                     _PS0            set	1032
   181     040B                     _PSA            set	1035
   182     040D                     _T0CS           set	1037
   183     0430                     _TRISB0         set	1072
   184                           
   185                           	psect	cinit
   186     07FC                     start_initialization:	
   187                           ; #config settings
   188                           
   189     07FC                     __initialization:
   190     07FC                     end_of_initialization:	
   191                           ;End of C runtime variable initialization code
   192                           
   193     07FC                     __end_of__initialization:
   194     07FC  0183               	clrf	3
   195     07FD  120A  118A  2FB4   	ljmp	_main	;jump to C main() function
   196                           
   197                           	psect	cstackCOMMON
   198     0070                     __pcstackCOMMON:
   199     0070                     ?_Timer0_1s_init:
   200     0070                     ?_delay_s:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_delay_1s:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     delay_s@s:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ??_Timer0_1s_init:	
   213                           ; 4 bytes @ 0x0
   214                           
   215     0070                     ??_delay_1s:	
   216                           ; 1 bytes @ 0x0
   217                           
   218                           
   219                           ; 1 bytes @ 0x0
   220     0070                     	ds	4
   221     0074                     ??_delay_s:
   222                           
   223                           ; 1 bytes @ 0x4
   224     0074                     	ds	4
   225     0078                     ??_main:
   226                           
   227                           	psect	maintext
   228     07B4                     __pmaintext:	
   229                           ; 1 bytes @ 0x8
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 23 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels required when called: 2
   255 ;; This function calls:
   256 ;;		_Timer0_1s_init
   257 ;;		_delay_s
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263     07B4                     _main:	
   264                           ;psect for function _main
   265                           
   266     07B4                     l615:	
   267                           ;incstack = 0
   268                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   269                           
   270                           
   271                           ;main.c: 24:     Timer0_1s_init();
   272     07B4  120A  118A  27A8  120A  118A  	fcall	_Timer0_1s_init
   273     07B9                     l617:
   274                           
   275                           ;main.c: 25:     TRISB0 = 0;
   276     07B9  1683               	bsf	3,5	;RP0=1, select bank1
   277     07BA  1303               	bcf	3,6	;RP1=0, select bank1
   278     07BB  1006               	bcf	6,0	;volatile
   279     07BC                     l619:
   280                           
   281                           ;main.c: 27:     {;main.c: 28:         RB0 = ~RB0;
   282     07BC  3001               	movlw	1
   283     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   284     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   285     07BF  0686               	xorwf	6,f
   286                           
   287                           ;main.c: 29:         delay_s(1);
   288     07C0  3000               	movlw	0
   289     07C1  00F3               	movwf	delay_s@s+3
   290     07C2  3000               	movlw	0
   291     07C3  00F2               	movwf	delay_s@s+2
   292     07C4  3000               	movlw	0
   293     07C5  00F1               	movwf	delay_s@s+1
   294     07C6  3001               	movlw	1
   295     07C7  00F0               	movwf	delay_s@s
   296     07C8  120A  118A  27D1  120A  118A  	fcall	_delay_s
   297     07CD  2FBC               	goto	l619
   298     07CE  120A  118A  2800   	ljmp	start
   299     07D1                     __end_of_main:
   300                           
   301                           	psect	text1
   302     07D1                     __ptext1:	
   303 ;; *************** function _delay_s *****************
   304 ;; Defined at:
   305 ;;		line 41 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;  s               4    0[COMMON] unsigned long 
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, status,0, pclath, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   319 ;;      Params:         4       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0
   321 ;;      Temps:          4       0       0       0       0
   322 ;;      Totals:         8       0       0       0       0
   323 ;;Total ram usage:        8 bytes
   324 ;; Hardware stack levels used: 1
   325 ;; Hardware stack levels required when called: 1
   326 ;; This function calls:
   327 ;;		_delay_1s
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333     07D1                     _delay_s:	
   334                           ;psect for function _delay_s
   335                           
   336     07D1                     l607:	
   337                           ;incstack = 0
   338                           ; Regs used in _delay_s: [wreg+status,2+status,0+pclath+cstack]
   339                           
   340                           
   341                           ;main.c: 41: void delay_s(uint32_t s);main.c: 42: {;main.c: 43:     while(s)
   342     07D1  2FF3               	goto	l613
   343     07D2                     l609:
   344                           
   345                           ;main.c: 44:     {;main.c: 45:         delay_1s();
   346     07D2  120A  118A  279E  120A  118A  	fcall	_delay_1s
   347     07D7                     l611:
   348                           
   349                           ;main.c: 46:         s--;
   350     07D7  3001               	movlw	1
   351     07D8  00F4               	movwf	??_delay_s
   352     07D9  3000               	movlw	0
   353     07DA  00F5               	movwf	??_delay_s+1
   354     07DB  3000               	movlw	0
   355     07DC  00F6               	movwf	??_delay_s+2
   356     07DD  3000               	movlw	0
   357     07DE  00F7               	movwf	??_delay_s+3
   358     07DF  0874               	movf	??_delay_s,w
   359     07E0  02F0               	subwf	delay_s@s,f
   360     07E1  0875               	movf	??_delay_s+1,w
   361     07E2  1C03               	skipc
   362     07E3  0F75               	incfsz	??_delay_s+1,w
   363     07E4  2FE6               	goto	u45
   364     07E5  2FE7               	goto	u46
   365     07E6                     u45:
   366     07E6  02F1               	subwf	delay_s@s+1,f
   367     07E7                     u46:
   368     07E7  0876               	movf	??_delay_s+2,w
   369     07E8  1C03               	skipc
   370     07E9  0F76               	incfsz	??_delay_s+2,w
   371     07EA  2FEC               	goto	u47
   372     07EB  2FED               	goto	u48
   373     07EC                     u47:
   374     07EC  02F2               	subwf	delay_s@s+2,f
   375     07ED                     u48:
   376     07ED  0877               	movf	??_delay_s+3,w
   377     07EE  1C03               	skipc
   378     07EF  0F77               	incfsz	??_delay_s+3,w
   379     07F0  2FF2               	goto	u49
   380     07F1  2FF3               	goto	u40
   381     07F2                     u49:
   382     07F2  02F3               	subwf	delay_s@s+3,f
   383     07F3                     u40:
   384     07F3                     l613:
   385                           
   386                           ;main.c: 43:     while(s)
   387     07F3  0873               	movf	delay_s@s+3,w
   388     07F4  0472               	iorwf	delay_s@s+2,w
   389     07F5  0471               	iorwf	delay_s@s+1,w
   390     07F6  0470               	iorwf	delay_s@s,w
   391     07F7  1D03               	skipz
   392     07F8  2FFA               	goto	u51
   393     07F9  2FFB               	goto	u50
   394     07FA                     u51:
   395     07FA  2FD2               	goto	l609
   396     07FB                     u50:
   397     07FB                     l42:
   398     07FB  0008               	return
   399     07FC                     __end_of_delay_s:
   400                           
   401                           	psect	text2
   402     079E                     __ptext2:	
   403 ;; *************** function _delay_1s *****************
   404 ;; Defined at:
   405 ;;		line 34 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		None
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          0       0       0       0       0
   422 ;;      Totals:         0       0       0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		_delay_s
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432     079E                     _delay_1s:	
   433                           ;psect for function _delay_1s
   434                           
   435     079E                     l589:	
   436                           ;incstack = 0
   437                           ; Regs used in _delay_1s: []
   438                           
   439     079E                     l33:	
   440                           ;main.c: 36:     while(TMR0IF != 1);
   441                           
   442     079E  1D0B               	btfss	11,2	;volatile
   443     079F  2FA1               	goto	u11
   444     07A0  2FA2               	goto	u10
   445     07A1                     u11:
   446     07A1  2F9E               	goto	l33
   447     07A2                     u10:
   448     07A2                     l35:
   449                           
   450                           ;main.c: 37:     TMR0IF = 0;
   451     07A2  110B               	bcf	11,2	;volatile
   452                           
   453                           ;main.c: 38:     TMR0 = 59;
   454     07A3  303B               	movlw	59
   455     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   456     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   457     07A6  0081               	movwf	1	;volatile
   458     07A7                     l36:
   459     07A7  0008               	return
   460     07A8                     __end_of_delay_1s:
   461                           
   462                           	psect	text3
   463     07A8                     __ptext3:	
   464 ;; *************** function _Timer0_1s_init *****************
   465 ;; Defined at:
   466 ;;		line 50 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		None
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   480 ;;      Params:         0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used: 1
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493     07A8                     _Timer0_1s_init:	
   494                           ;psect for function _Timer0_1s_init
   495                           
   496     07A8                     l591:	
   497                           ;incstack = 0
   498                           ; Regs used in _Timer0_1s_init: []
   499                           
   500                           
   501                           ;main.c: 52:     T0CS = 0;
   502     07A8  1683               	bsf	3,5	;RP0=1, select bank1
   503     07A9  1303               	bcf	3,6	;RP1=0, select bank1
   504     07AA  1281               	bcf	1,5	;volatile
   505                           
   506                           ;main.c: 53:     PSA = 0;
   507     07AB  1181               	bcf	1,3	;volatile
   508                           
   509                           ;main.c: 55:     PS0 = 1;
   510     07AC  1401               	bsf	1,0	;volatile
   511                           
   512                           ;main.c: 56:     PS1 = 1;
   513     07AD  1481               	bsf	1,1	;volatile
   514                           
   515                           ;main.c: 57:     PS2 = 1;
   516     07AE  1501               	bsf	1,2	;volatile
   517                           
   518                           ;main.c: 65:     TMR0 = 59;
   519     07AF  303B               	movlw	59
   520     07B0  1283               	bcf	3,5	;RP0=0, select bank0
   521     07B1  1303               	bcf	3,6	;RP1=0, select bank0
   522     07B2  0081               	movwf	1	;volatile
   523     07B3                     l45:
   524     07B3  0008               	return
   525     07B4                     __end_of_Timer0_1s_init:
   526     0002                     ___latbits      equ	2
   527     007E                     btemp           set	126	;btemp
   528     007E                     wtemp0          set	126
   529                           
   530                           	psect	config
   531                           
   532                           ;Config register CONFIG @ 0x2007
   533                           ;	Oscillator Selection bits
   534                           ;	FOSC = HS, HS oscillator
   535                           ;	Watchdog Timer Enable bit
   536                           ;	WDTE = OFF, WDT disabled
   537                           ;	Power-up Timer Enable bit
   538                           ;	PWRTE = OFF, PWRT disabled
   539                           ;	Brown-out Reset Enable bit
   540                           ;	BOREN = OFF, BOR disabled
   541                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   542                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   543                           ;	Data EEPROM Memory Code Protection bit
   544                           ;	CPD = OFF, Data EEPROM code protection off
   545                           ;	Flash Program Memory Write Enable bits
   546                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   547                           ;	In-Circuit Debugger Mode bit
   548                           ;	DEBUG = 0x1, unprogrammed default
   549                           ;	Flash Program Memory Code Protection bit
   550                           ;	CP = OFF, Code protection off
   551     2007                     	org	8199
   552     2007  3F3A               	dw	16186

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay_s

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      24
                     _Timer0_1s_init
                            _delay_s
 ---------------------------------------------------------------------------------
 (1) _delay_s                                              8     4      4      24
                                              0 COMMON     8     4      4
                           _delay_1s
 ---------------------------------------------------------------------------------
 (2) _delay_1s                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_1s_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Timer0_1s_init
   _delay_s
     _delay_1s

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      8       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 12 22:56:30 2024

                     l33 079E                       l42 07FB                       l35 07A2  
                     l36 07A7                       l45 07B3                       u10 07A2  
                     u11 07A1                       u40 07F3                       u50 07FB  
                     u51 07FA                       u45 07E6                       u46 07E7  
                     u47 07EC                       u48 07ED                       u49 07F2  
                    l611 07D7                      l613 07F3                      l607 07D1  
                    l615 07B4                      l609 07D2                      l617 07B9  
                    l619 07BC                      l591 07A8                      l589 079E  
                    _RB0 0030                      _PS0 0408                      _PS1 0409  
                    _PS2 040A                      _PSA 040B                     _T0CS 040D  
                   _TMR0 0001                     _main 07B4                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of_delay_s 07FC  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07D1           _Timer0_1s_init 07A8                   ??_main 0078  
                 _TMR0IF 005A                   _TRISB0 0430         __end_of_delay_1s 07A8  
 __end_of_Timer0_1s_init 07B4                ??_delay_s 0074  __end_of__initialization 07FC  
         __pcstackCOMMON 0070          ?_Timer0_1s_init 0070               __pmaintext 07B4  
              ?_delay_1s 0070                  _delay_s 07D1                  __ptext1 07D1  
                __ptext2 079E                  __ptext3 07A8               ??_delay_1s 0070  
   end_of_initialization 07FC         ??_Timer0_1s_init 0070      start_initialization 07FC  
              ___latbits 0002                 ?_delay_s 0070                 _delay_1s 079E  
               delay_s@s 0070  
